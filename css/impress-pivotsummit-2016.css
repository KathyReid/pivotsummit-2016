/*
  color palette - from Pivot Summit website. Props to @codeacious
  - mid blue - #0065F9
  - mid point 1 - #008AEB
  - mid point 2 - #00AFDE
  - mid point 3 - #00D3D0
  - aqua - #00F8C2
  - white - #FFF
*/


/*
  Set up font faces locally
*/


@font-face {
  font-family: 'Poppins';
  src: url('../fonts/Poppins-Bold.ttf');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Poppins';
  src: url('../fonts/Poppins-Light.ttf');
  font-weight: 100;
  font-style: normal;
}
@font-face {
  font-family: 'Poppins';
  src: url('../fonts/Poppins-Medium.ttf');
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: 'Poppins';
  src: url('../fonts/Poppins-Regular.ttf');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Poppins';
  src: url('../fonts/Poppins-SemiBold.ttf');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'CutiveMono';
  src: url('../fonts/CutiveMono-Regular.ttf');
  font-weight: 400;
  font-style: normal;
}


/*
    We start with a good ol' reset.
    That's the one by Eric Meyer http://meyerweb.com/eric/tools/css/reset/
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
ol, ul {
    list-style: none;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

/*
    Now here is when interesting things start to appear.

    We set up <body> styles with default font and nice gradient in the background.
    And yes, there is a lot of repetition there because of -prefixes but we don't
    want to leave anybody behind.
*/
body {
    font-family: 'Poppins', sans-serif;
    background: #0065F9;
    line-height: 1.2;
    font-size: 200%;

    min-height: 100vh;
    min-width: 100%;
}



q {
  font-weight: 200;
  font-size: 200%;
  text-align: center;
  padding: 15% 10% 10% 10%;
  color: #00F8C2;
  display: block;
  line-height: 150%;
  text-shadow: 2px 2px black;
}

.white {
  color: #FFF;
}

q::before {
  content: "\201C";
}

q::after {
  content: "\201D";
}

q::before, q::after {
  color: #fff;
}

/*
    Now let's bring some text styles back ...
*/
b, strong { font-weight: bold }
i, em { font-style: italic }

/*
    ... and give links a nice look.
*/
a {
    color: inherit;
    text-decoration: underline;
    padding: 0 0.1em;
    background: rgba(255,255,255,0.5);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.9);
    border-radius: 0.2em;

    -webkit-transition: 0.5s;
    -moz-transition:    0.5s;
    -ms-transition:     0.5s;
    -o-transition:      0.5s;
    transition:         0.5s;
}

a:hover,
a:focus {
    background: rgba(255,255,255,1);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.5);
}

/*
    Because the main point behind the impress.js demo is to demo impress.js
    we display a fallback message for users with browsers that don't support
    all the features required by it.

    All of the content will be still fully accessible for them, but I want
    them to know that they are missing something - that's what the demo is
    about, isn't it?

    And then we hide the message, when support is detected in the browser.
*/

.fallback-message {
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #5d4f48;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}

/*
    Now let's style the presentation steps.

    We start with basics to make sure it displays correctly in everywhere ...
*/

.step {

}

/*
    ... and we enhance the styles for impress.js.

    Basically we remove the margin and make inactive steps a little bit transparent.
*/
.impress-enabled .step {
    margin: 0;
    opacity: 0.02;

    -webkit-transition: opacity 1s;
    -moz-transition:    opacity 1s;
    -ms-transition:     opacity 1s;
    -o-transition:      opacity 1s;
    transition:         opacity 1s;
}

.impress-enabled .step.active { opacity: 1 }

/*
    These 'slide' step styles were heavily inspired by HTML5 Slides:
    http://html5slides.googlecode.com/svn/trunk/styles.css

    ;)

    They cover everything what you see on first three steps of the demo.
*/
.slide {

    position: relative;
    top: 0;
    left: 0;
    min-height: 100vh;
    min-width: 100%;

    width: 1600px;
    height: 900px;

}


/*
    The last step is an overview.
    There is no content in it, so we make sure it's not visible because we want
    to be able to click on other steps.

*/
#overview { display: none }

/*
    We also make other steps visible and give them a pointer cursor using the
    `impress-on-` class.
*/
.impress-on-overview .step {
    opacity: 1;
    cursor: pointer;
}

.hint {
    /*
        We hide the hint until presentation is started and from browsers not supporting
        impress.js, as they will have a linear scrollable view ...
    */
    display: none;

    /*
        ... and give it some fixed position and nice styles.
    */
    position: fixed;
    left: 0;
    right: 0;
    bottom: 200px;

    background: rgba(0,0,0,0.5);
    color: #EEE;
    text-align: center;

    font-size: 50px;
    padding: 20px;

    z-index: 100;

    /*
        By default we don't want the hint to be visible, so we make it transparent ...
    */
    opacity: 0;

    /*
        ... and position it below the bottom of the screen (relative to it's fixed position)
    */
    -webkit-transform: translateY(400px);
    -moz-transform:    translateY(400px);
    -ms-transform:     translateY(400px);
    -o-transform:      translateY(400px);
    transform:         translateY(400px);

    /*
        Now let's imagine that the hint is visible and we want to fade it out and move out
        of the screen.

        So we define the transition on the opacity property with 1s duration and another
        transition on transform property delayed by 1s so it will happen after the fade out
        on opacity finished.

        This way user will not see the hint moving down.
    */
    -webkit-transition: opacity 1s, -webkit-transform 0.5s 1s;
    -moz-transition:    opacity 1s,    -moz-transform 0.5s 1s;
    -ms-transition:     opacity 1s,     -ms-transform 0.5s 1s;
    -o-transition:      opacity 1s,      -o-transform 0.5s 1s;
    transition:         opacity 1s,         transform 0.5s 1s;
}

/*
    Now we 'enable' the hint when presentation is initialized ...
*/
.impress-enabled .hint { display: block }

/*
    ... and we will show it when the first step (with id 'bored') is active.
*/
.impress-on-bored .hint {
    /*
        We remove the transparency and position the hint in its default fixed
        position.
    */
    opacity: 1;

    -webkit-transform: translateY(0px);
    -moz-transform:    translateY(0px);
    -ms-transform:     translateY(0px);
    -o-transform:      translateY(0px);
    transform:         translateY(0px);

    /*
        Now for fade in transition we have the oposite situation from the one
        above.

        First after 4.5s delay we animate the transform property to move the hint
        into its correct position and after that we fade it in with opacity
        transition.
    */
    -webkit-transition: opacity 1s 5s, -webkit-transform 0.5s 4.5s;
    -moz-transition:    opacity 1s 5s,    -moz-transform 0.5s 4.5s;
    -ms-transition:     opacity 1s 5s,     -ms-transform 0.5s 4.5s;
    -o-transition:      opacity 1s 5s,      -o-transform 0.5s 4.5s;
    transition:         opacity 1s 5s,         transform 0.5s 4.5s;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }


#impress {

}

/*

  Slide-specific styles

*/

#logo {
  position: fixed;
  top: 2%;
  right: 5%;
}

.source {
  font-size: 85%;
  text-align: center;
  padding-top: 2%;
  font-style: italic;
}

.title {
  text-align: center;
  font-weight: 600;
  text-shadow: 2px 2px black;
  color: white;
}

.mission {
  font-family: "CutiveMono", monospace;
  font-size: 400%;
  position: relative;
  top: 30%;
}

.dkbackground {
  background-color: rgba(0, 101, 249, 0.3);
}

h2 {
  font-size: 350%;
  font-weight: 700;
  color: #fff;
  text-shadow: 2px 2px black;
  padding: 5%;
  text-align: center;
}

.bottom50 {
  position: relative;
  top: 42%;
}

.bottom55 {
  position: relative;
  top: 55%;
}

h3 {
  font-size: 170%;
  color: white;
  text-shadow: 2px 2px black;
  padding: 1px;
  margin: 10px 0 0 0;
  text-align: center;
}


h1 {
  font-size: 300%;
  font-weight: 700;
  color: white;
  text-shadow: 2px 2px black;
  position: relative;
  top: 5%;
  padding: 5% 0 5% 0;
  text-align: center;
}

#Introduction {
  background: url(../img/kirk-spock-lifejim.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#Alien {
  background: url(../img/borg-queen.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#Ratcatcher {
  background: url(../img/rat-catcher.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#Switchboard {
  background: url(../img/bell-system-switchboard.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}
#Janeway {
  background: url(../img/kathryn-janeway.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#WEFSkillsDemand {
  background: url(../img/WEF-future-demand.png) no-repeat center center fixed;
}

#TayAI {
  background: url(../img/tayai.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}

#SevenTypesJobs {
  background: url(../img/7-types-jobs.png) no-repeat center center fixed;
}

#DistopiaUtopia {
  background: url(../img/a-line-of-smileys-vector-clipart.png) no-repeat center center fixed;
}

#FourthIndustrialRevolution {
  background: url(../img/fourth-industrial-revolution.png) no-repeat center center fixed;
}

#ProductivityWagesGrowth {
  background: url(../img/productivity-vs-wages-growth.jpg) no-repeat center center fixed;
}

#KnowledgeExpiry {
  background: url(../img/socrates.jpg) no-repeat center center fixed;
}


.list-items li {
  padding-bottom: 0.5%;
  font-size: 130%;
  text-align: center;
  color: #00F8C2;
}

.large {
  font-size: 140%;
}

.larger {
  font-size: 300%;
}

.list-items {
  list-style: square outside;
}


.csl-entry {
  font-size: 90%;
  line-height: 130%;
  padding: 10px 0 0 0;
  border-bottom: 1px solid white;
}
